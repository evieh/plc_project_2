-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Tup_Y.y
-----------------------------------------------------------------------------

state 3 contains 1 shift/reduce conflicts.
state 31 contains 1 shift/reduce conflicts.
state 45 contains 1 shift/reduce conflicts.
state 56 contains 3 shift/reduce conflicts.
state 57 contains 3 shift/reduce conflicts.
state 58 contains 3 shift/reduce conflicts.

rule 19 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseTup -> Prog                            (0)
	Prog -> AllFuncDecs '!' FuncTest                   (1)
	Pattern -> '(' VarTup ')'                          (2)
	Pattern -> VAR                                     (3)
	Pattern -> '#'                                     (4)
	Patterns ->                                        (5)
	Patterns -> PatternList                            (6)
	PatternList -> Pattern                             (7)
	PatternList -> Pattern PatternList                 (8)
	VarTup ->                                          (9)
	VarTup -> VarTupInner                              (10)
	VarTupInner -> VAR                                 (11)
	VarTupInner -> VAR ',' VarTupInner                 (12)
	FuncDecLine -> VAR Patterns '|' Expr '=' Expr      (13)
	FuncDecLine -> VAR Patterns '=' Expr               (14)
	FuncDec -> FuncDecLines                            (15)
	FuncDecLines -> FuncDecLine                        (16)
	FuncDecLines -> FuncDecLine FuncDecLines           (17)
	AllFuncDecs -> FuncDecs                            (18)
	FuncDecs -> FuncDec                                (19)
	FuncDecs -> FuncDec '!' FuncDecs                   (20)
	FuncTest -> VAR Exprs '=' Expr                     (21)
	Exprs ->                                           (22)
	Exprs -> ExprList                                  (23)
	ExprList -> Expr                                   (24)
	ExprList -> Expr ExprList                          (25)
	Expr -> VAR '(' ExprTup ')'                        (26)
	Expr -> VAR                                        (27)
	Expr -> '(' Expr ')'                               (28)
	Expr -> '(' ExprTup ')'                            (29)
	Expr -> '#'                                        (30)
	Expr -> NUM                                        (31)
	Expr -> Expr '+' Expr                              (32)
	Expr -> Expr '*' Expr                              (33)
	Expr -> Expr '-' Expr                              (34)
	ExprTup ->                                         (35)
	ExprTup -> ExprTupInner                            (36)
	ExprTupInner -> Expr                               (37)
	ExprTupInner -> Expr ',' ExprTupInner              (38)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'#'            { TupNull }
	'='            { TupEquals }
	'!'            { TupExclam }
	','            { TupComma }
	'('            { TupLParen }
	')'            { TupRParen }
	'|'            { TupPipe }
	'+'            { TupAdd }
	'*'            { TupMul }
	'-'            { TupSub }
	NUM            { TupInt $$ }
	VAR            { TupLabel $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseTup rule  0
	Prog            rule  1
	Pattern         rules 2, 3, 4
	Patterns        rules 5, 6
	PatternList     rules 7, 8
	VarTup          rules 9, 10
	VarTupInner     rules 11, 12
	FuncDecLine     rules 13, 14
	FuncDec         rule  15
	FuncDecLines    rules 16, 17
	AllFuncDecs     rule  18
	FuncDecs        rules 19, 20
	FuncTest        rule  21
	Exprs           rules 22, 23
	ExprList        rules 24, 25
	Expr            rules 26, 27, 28, 29, 30, 31, 32, 33, 34
	ExprTup         rules 35, 36
	ExprTupInner    rules 37, 38

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	VAR            shift, and enter state 7

	Prog           goto state 8
	FuncDecLine    goto state 2
	FuncDec        goto state 3
	FuncDecLines   goto state 4
	AllFuncDecs    goto state 5
	FuncDecs       goto state 6

State 1


	VAR            shift, and enter state 7

	FuncDecLine    goto state 2
	FuncDec        goto state 3
	FuncDecLines   goto state 4
	AllFuncDecs    goto state 5
	FuncDecs       goto state 6

State 2

	FuncDecLines -> FuncDecLine .                       (rule 16)
	FuncDecLines -> FuncDecLine . FuncDecLines          (rule 17)

	'!'            reduce using rule 16
	VAR            shift, and enter state 7

	FuncDecLine    goto state 2
	FuncDecLines   goto state 17

State 3

	FuncDecs -> FuncDec .                               (rule 19)
	FuncDecs -> FuncDec . '!' FuncDecs                  (rule 20)

	'!'            shift, and enter state 16
			(reduce using rule 19)



State 4

	FuncDec -> FuncDecLines .                           (rule 15)

	'!'            reduce using rule 15


State 5

	Prog -> AllFuncDecs . '!' FuncTest                  (rule 1)

	'!'            shift, and enter state 15


State 6

	AllFuncDecs -> FuncDecs .                           (rule 18)

	'!'            reduce using rule 18


State 7

	FuncDecLine -> VAR . Patterns '|' Expr '=' Expr     (rule 13)
	FuncDecLine -> VAR . Patterns '=' Expr              (rule 14)

	'#'            shift, and enter state 12
	'='            reduce using rule 5
	'('            shift, and enter state 13
	'|'            reduce using rule 5
	VAR            shift, and enter state 14

	Pattern        goto state 9
	Patterns       goto state 10
	PatternList    goto state 11

State 8

	%start_parseTup -> Prog .                           (rule 0)

	%eof           accept


State 9

	PatternList -> Pattern .                            (rule 7)
	PatternList -> Pattern . PatternList                (rule 8)

	'#'            shift, and enter state 12
	'='            reduce using rule 7
	'('            shift, and enter state 13
	'|'            reduce using rule 7
	VAR            shift, and enter state 14

	Pattern        goto state 9
	PatternList    goto state 26

State 10

	FuncDecLine -> VAR Patterns . '|' Expr '=' Expr     (rule 13)
	FuncDecLine -> VAR Patterns . '=' Expr              (rule 14)

	'='            shift, and enter state 24
	'|'            shift, and enter state 25


State 11

	Patterns -> PatternList .                           (rule 6)

	'='            reduce using rule 6
	'|'            reduce using rule 6


State 12

	Pattern -> '#' .                                    (rule 4)

	'#'            reduce using rule 4
	'='            reduce using rule 4
	'('            reduce using rule 4
	'|'            reduce using rule 4
	VAR            reduce using rule 4


State 13

	Pattern -> '(' . VarTup ')'                         (rule 2)

	')'            reduce using rule 9
	VAR            shift, and enter state 23

	VarTup         goto state 21
	VarTupInner    goto state 22

State 14

	Pattern -> VAR .                                    (rule 3)

	'#'            reduce using rule 3
	'='            reduce using rule 3
	'('            reduce using rule 3
	'|'            reduce using rule 3
	VAR            reduce using rule 3


State 15

	Prog -> AllFuncDecs '!' . FuncTest                  (rule 1)

	VAR            shift, and enter state 20

	FuncTest       goto state 19

State 16

	FuncDecs -> FuncDec '!' . FuncDecs                  (rule 20)

	VAR            shift, and enter state 7

	FuncDecLine    goto state 2
	FuncDec        goto state 3
	FuncDecLines   goto state 4
	FuncDecs       goto state 18

State 17

	FuncDecLines -> FuncDecLine FuncDecLines .          (rule 17)

	'!'            reduce using rule 17


State 18

	FuncDecs -> FuncDec '!' FuncDecs .                  (rule 20)

	'!'            reduce using rule 20


State 19

	Prog -> AllFuncDecs '!' FuncTest .                  (rule 1)

	%eof           reduce using rule 1


State 20

	FuncTest -> VAR . Exprs '=' Expr                    (rule 21)

	'#'            shift, and enter state 28
	'='            reduce using rule 22
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Exprs          goto state 35
	ExprList       goto state 36
	Expr           goto state 37

State 21

	Pattern -> '(' VarTup . ')'                         (rule 2)

	')'            shift, and enter state 34


State 22

	VarTup -> VarTupInner .                             (rule 10)

	')'            reduce using rule 10


State 23

	VarTupInner -> VAR .                                (rule 11)
	VarTupInner -> VAR . ',' VarTupInner                (rule 12)

	','            shift, and enter state 33
	')'            reduce using rule 11


State 24

	FuncDecLine -> VAR Patterns '=' . Expr              (rule 14)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 32

State 25

	FuncDecLine -> VAR Patterns '|' . Expr '=' Expr     (rule 13)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 27

State 26

	PatternList -> Pattern PatternList .                (rule 8)

	'='            reduce using rule 8
	'|'            reduce using rule 8


State 27

	FuncDecLine -> VAR Patterns '|' Expr . '=' Expr     (rule 13)
	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)

	'='            shift, and enter state 48
	'+'            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41


State 28

	Expr -> '#' .                                       (rule 30)

	'#'            reduce using rule 30
	'='            reduce using rule 30
	'!'            reduce using rule 30
	','            reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'+'            reduce using rule 30
	'*'            reduce using rule 30
	'-'            reduce using rule 30
	NUM            reduce using rule 30
	VAR            reduce using rule 30
	%eof           reduce using rule 30


State 29

	Expr -> '(' . Expr ')'                              (rule 28)
	Expr -> '(' . ExprTup ')'                           (rule 29)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            reduce using rule 35
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 45
	ExprTup        goto state 46
	ExprTupInner   goto state 47

State 30

	Expr -> NUM .                                       (rule 31)

	'#'            reduce using rule 31
	'='            reduce using rule 31
	'!'            reduce using rule 31
	','            reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'+'            reduce using rule 31
	'*'            reduce using rule 31
	'-'            reduce using rule 31
	NUM            reduce using rule 31
	VAR            reduce using rule 31
	%eof           reduce using rule 31


State 31

	Expr -> VAR . '(' ExprTup ')'                       (rule 26)
	Expr -> VAR .                                       (rule 27)

	'#'            reduce using rule 27
	'='            reduce using rule 27
	'!'            reduce using rule 27
	','            reduce using rule 27
	'('            shift, and enter state 44
			(reduce using rule 27)

	')'            reduce using rule 27
	'+'            reduce using rule 27
	'*'            reduce using rule 27
	'-'            reduce using rule 27
	NUM            reduce using rule 27
	VAR            reduce using rule 27
	%eof           reduce using rule 27


State 32

	FuncDecLine -> VAR Patterns '=' Expr .              (rule 14)
	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)

	'!'            reduce using rule 14
	'+'            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	VAR            reduce using rule 14


State 33

	VarTupInner -> VAR ',' . VarTupInner                (rule 12)

	VAR            shift, and enter state 23

	VarTupInner    goto state 43

State 34

	Pattern -> '(' VarTup ')' .                         (rule 2)

	'#'            reduce using rule 2
	'='            reduce using rule 2
	'('            reduce using rule 2
	'|'            reduce using rule 2
	VAR            reduce using rule 2


State 35

	FuncTest -> VAR Exprs . '=' Expr                    (rule 21)

	'='            shift, and enter state 42


State 36

	Exprs -> ExprList .                                 (rule 23)

	'='            reduce using rule 23


State 37

	ExprList -> Expr .                                  (rule 24)
	ExprList -> Expr . ExprList                         (rule 25)
	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)

	'#'            shift, and enter state 28
	'='            reduce using rule 24
	'('            shift, and enter state 29
	'+'            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	ExprList       goto state 38
	Expr           goto state 37

State 38

	ExprList -> Expr ExprList .                         (rule 25)

	'='            reduce using rule 25


State 39

	Expr -> Expr '+' . Expr                             (rule 32)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 58

State 40

	Expr -> Expr '*' . Expr                             (rule 33)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 57

State 41

	Expr -> Expr '-' . Expr                             (rule 34)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 56

State 42

	FuncTest -> VAR Exprs '=' . Expr                    (rule 21)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 55

State 43

	VarTupInner -> VAR ',' VarTupInner .                (rule 12)

	')'            reduce using rule 12


State 44

	Expr -> VAR '(' . ExprTup ')'                       (rule 26)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            reduce using rule 35
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 53
	ExprTup        goto state 54
	ExprTupInner   goto state 47

State 45

	Expr -> '(' Expr . ')'                              (rule 28)
	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	ExprTupInner -> Expr .                              (rule 37)
	ExprTupInner -> Expr . ',' ExprTupInner             (rule 38)

	','            shift, and enter state 51
	')'            shift, and enter state 52
			(reduce using rule 37)

	'+'            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41


State 46

	Expr -> '(' ExprTup . ')'                           (rule 29)

	')'            shift, and enter state 50


State 47

	ExprTup -> ExprTupInner .                           (rule 36)

	')'            reduce using rule 36


State 48

	FuncDecLine -> VAR Patterns '|' Expr '=' . Expr     (rule 13)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 49

State 49

	FuncDecLine -> VAR Patterns '|' Expr '=' Expr .     (rule 13)
	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)

	'!'            reduce using rule 13
	'+'            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	VAR            reduce using rule 13


State 50

	Expr -> '(' ExprTup ')' .                           (rule 29)

	'#'            reduce using rule 29
	'='            reduce using rule 29
	'!'            reduce using rule 29
	','            reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'+'            reduce using rule 29
	'*'            reduce using rule 29
	'-'            reduce using rule 29
	NUM            reduce using rule 29
	VAR            reduce using rule 29
	%eof           reduce using rule 29


State 51

	ExprTupInner -> Expr ',' . ExprTupInner             (rule 38)

	'#'            shift, and enter state 28
	'('            shift, and enter state 29
	NUM            shift, and enter state 30
	VAR            shift, and enter state 31

	Expr           goto state 53
	ExprTupInner   goto state 60

State 52

	Expr -> '(' Expr ')' .                              (rule 28)

	'#'            reduce using rule 28
	'='            reduce using rule 28
	'!'            reduce using rule 28
	','            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'+'            reduce using rule 28
	'*'            reduce using rule 28
	'-'            reduce using rule 28
	NUM            reduce using rule 28
	VAR            reduce using rule 28
	%eof           reduce using rule 28


State 53

	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	ExprTupInner -> Expr .                              (rule 37)
	ExprTupInner -> Expr . ',' ExprTupInner             (rule 38)

	','            shift, and enter state 51
	')'            reduce using rule 37
	'+'            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41


State 54

	Expr -> VAR '(' ExprTup . ')'                       (rule 26)

	')'            shift, and enter state 59


State 55

	FuncTest -> VAR Exprs '=' Expr .                    (rule 21)
	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)

	'+'            shift, and enter state 39
	'*'            shift, and enter state 40
	'-'            shift, and enter state 41
	%eof           reduce using rule 21


State 56

	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)
	Expr -> Expr '-' Expr .                             (rule 34)

	'#'            reduce using rule 34
	'='            reduce using rule 34
	'!'            reduce using rule 34
	','            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'+'            shift, and enter state 39
			(reduce using rule 34)

	'*'            shift, and enter state 40
			(reduce using rule 34)

	'-'            shift, and enter state 41
			(reduce using rule 34)

	NUM            reduce using rule 34
	VAR            reduce using rule 34
	%eof           reduce using rule 34


State 57

	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr '*' Expr .                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)

	'#'            reduce using rule 33
	'='            reduce using rule 33
	'!'            reduce using rule 33
	','            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'+'            shift, and enter state 39
			(reduce using rule 33)

	'*'            shift, and enter state 40
			(reduce using rule 33)

	'-'            shift, and enter state 41
			(reduce using rule 33)

	NUM            reduce using rule 33
	VAR            reduce using rule 33
	%eof           reduce using rule 33


State 58

	Expr -> Expr . '+' Expr                             (rule 32)
	Expr -> Expr '+' Expr .                             (rule 32)
	Expr -> Expr . '*' Expr                             (rule 33)
	Expr -> Expr . '-' Expr                             (rule 34)

	'#'            reduce using rule 32
	'='            reduce using rule 32
	'!'            reduce using rule 32
	','            reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'+'            shift, and enter state 39
			(reduce using rule 32)

	'*'            shift, and enter state 40
			(reduce using rule 32)

	'-'            shift, and enter state 41
			(reduce using rule 32)

	NUM            reduce using rule 32
	VAR            reduce using rule 32
	%eof           reduce using rule 32


State 59

	Expr -> VAR '(' ExprTup ')' .                       (rule 26)

	'#'            reduce using rule 26
	'='            reduce using rule 26
	'!'            reduce using rule 26
	','            reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'+'            reduce using rule 26
	'*'            reduce using rule 26
	'-'            reduce using rule 26
	NUM            reduce using rule 26
	VAR            reduce using rule 26
	%eof           reduce using rule 26


State 60

	ExprTupInner -> Expr ',' ExprTupInner .             (rule 38)

	')'            reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 39
Number of terminals: 12
Number of non-terminals: 18
Number of states: 61
